- name: Install SSH and import ansible key
  import_tasks:
    file: "{{ role_path }}/../build_template_guest/tasks/ansible_ssh.yml"

# - setup:
#   become: yes

- name: Create redis group
  group:
    name: redis
    gid: 1000
    system: yes
  become: yes
#  delegate_to: "{{ lxd_hostname }}"


- name: Create Redis user
  user:
    name: redis
    uid: 999
    group: redis
    system: yes
  become: yes
#  delegate_to: "{{ lxd_hostname }}"

# - name: Add redis user and group
#   shell: "lxc exec {{ lxd_hostname }} -- /bin/sh -c \"addgroup -S -g 1000 redis && adduser -S -G redis -u 999 redis\""
#   delegate_to: "{{ pve_primary_host_ip }}"
#   become: yes
#
# - name: Add redis user and group
#   shell: "lxc exec {{ lxd_hostname }} -- /bin/sh -c \"apk add --no-cache 'su-exec>=0.2' tzdata\""
#   delegate_to: "{{ pve_primary_host_ip }}"
#   become: yes

- name: Set container environment
  shell: "lxc config set {{ lxd_hostname }} environment.{{ item }}"
  become: yes
  delegate_to: "{{ pve_primary_host_ip }}"
  loop:
    - "REDIS_VERSION=6.0.1"
    - "REDIS_DOWNLOAD_URL=http://download.redis.io/releases/redis-6.0.1.tar.gz"
    - "REDIS_DOWNLOAD_SHA=b8756e430479edc162ba9c44dc89ac394316cd482f2dc6b91bcd5fe12593f273"

- name: Install packages for build
  package:
    name:
      - ".build-deps"
      - coreutils
      - gcc
      - linux-headers
      - make
      - musl-dev
      - openssl-dev
    state: present
    use: apk
  delegate_to: "{{ lxd_hostname }}"

# sudo lxc exec redisdb-build -- /bin/sh -c set -eux; apk add --no-cache --virtual .build-deps  coreutils gcc linux-headers  make  musl-dev  openssl-dev;   wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL";  echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz" | sha256sum -c -;  mkdir -p /usr/src/redis;tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1;rm redis.tar.gz;grep -E '^ *createBoolConfig[(]"protected-mode",.*, *1 *,.*[)],$' /usr/src/redis/src/config.c;  sed -ri 's!^( *createBoolConfig[(]"protected-mode",.*, *)1( *,.*[)],)$!\10\2!' /usr/src/redis/src/config.c;     grep -E '^ *createBoolConfig[(]"protected-mode",.*, *0 *,.*[)],$' /usr/src/redis/src/config.c;export BUILD_TLS=yes;   make -C /usr/src/redis -j "$(nproc)" all;   make -C /usr/src/redis install;
#
#  serverMd5="$(md5sum /usr/local/bin/redis-server | cut -d' ' -f1)"; export serverMd5;    find /usr/local/bin/redis* -maxdepth 0 -type f -not -name redis-server -exec sh -eux -c 'md5="$(md5sum "$1" | cut -d" " -f1)";           test "$md5" = "$serverMd5";' -- '{}' ';'       -exec ln -svfT 'redis-server' '{}' ';'  ;       rm -r /usr/src/redis;runDeps="$(scanelf --needed --nobanner --format '%n#p' --recursive /usr/local          | tr ',' '\n' | sort -u | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'     )";     apk add --no-network --virtual .redis-rundeps $runDeps;     apk del --no-network .build-deps;       redis-cli --version;    redis-server --version
#
# /bin/sh -c mkdir /data && chown redis:redis /data
#
# sudo lxc config set redisdb-build raw.lxc="lxc.init.cmd=/usr/local/bin/redis-server /data/config.ini "
#
# https://hub.docker.com/layers/i386/redis/6-alpine3.11/images/sha256-a002af578e24f00dd3f9025245f6b2e5d32f7772186caed168357babbe510a1e?context=explore
